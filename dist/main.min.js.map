{"version":3,"file":"main.min.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;ACVa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE,IAAI;AACN;;AAEA;;AAEA;;;;;;;;;;;ACpIa;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,oCAAoC,mBAAO,CAAC,uDAAW;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,uDAAuD,YAAY;AACnE,KAAK;AACL;AACA,uDAAuD,gBAAgB;AACvE;AACA;AACA;AACA;AACA,SAAS;AACT,8CAA8C,aAAa,SAAS,KAAK;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,gBAAgB,gCAAgC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,kBAAkB;;;;;;;UChHlB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://dollarSigns/webpack/universalModuleDefinition","webpack://dollarSigns/./node_modules/deepmerge/dist/cjs.js","webpack://dollarSigns/./src/twodollars.ts","webpack://dollarSigns/webpack/bootstrap","webpack://dollarSigns/webpack/before-startup","webpack://dollarSigns/webpack/startup","webpack://dollarSigns/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"dollarSigns\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dollarSigns\"] = factory();\n\telse\n\t\troot[\"dollarSigns\"] = factory();\n})(global, function() {\nreturn ","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.twoDollars = void 0;\nconst deepmerge_1 = __importDefault(require(\"deepmerge\"));\nconst d = document;\nconst dp = new DOMParser();\nconst twoDollars = {\n    create: (element, attributes) => {\n        const $element = d.createElement(element.slice(1, -2));\n        attributes &&\n            Object.keys(attributes).forEach((key) => $element.setAttribute(key, attributes[key]));\n        return $element;\n    },\n    find: (selector, target = d.body) => {\n        return selector === \"html\"\n            ? [d.documentElement]\n            : Array.from(target.querySelectorAll(selector));\n    },\n    append: (toAppend, target) => {\n        target.appendChild(toAppend);\n        return twoDollars;\n    },\n    css: ($element, props) => {\n        props &&\n            Object.keys(props).forEach((key) => $element.style.setProperty(key, props[key]));\n        return twoDollars;\n    },\n    history: {\n        go: (name, path) => window.history.pushState({ site: name }, \"\", path),\n    },\n    measure: (str, fontSize) => {\n        const $helper = twoDollars.create(\"<span/>\", { innerText: str });\n        twoDollars.css($helper, {\n            position: \"absolute\",\n            left: \"-9999px\",\n            top: \"-9999px\",\n        });\n        fontSize && twoDollars.css($helper, { fontSize: `${fontSize}px` });\n        document.body.appendChild($helper);\n        const measures = {\n            h: $helper.clientHeight,\n            w: $helper.clientWidth,\n        };\n        document.body.removeChild($helper);\n        return measures;\n    },\n    parse: (str) => dp.parseFromString(str, \"text/html\"),\n    parent: ($element, selector) => {\n        if (!selector)\n            return $element.parentNode;\n        const selectorMatch = ($elm, sel) => $elm.matches(sel)\n            ? $elm\n            : selectorMatch($elm.parentNode, sel);\n        return selectorMatch($element.parentNode, selector);\n    },\n    hasClass: (element, cn) => element.classList.contains(cn),\n    addClass: (element, cn) => {\n        !element.classList.contains(cn) && element.classList.add(cn);\n        return twoDollars;\n    },\n    removeClass: (element, cn) => {\n        element.classList.contains(cn) && element.classList.remove(cn);\n        return twoDollars;\n    },\n    toggleClass: (element, cn) => {\n        element.classList.toggle(cn);\n        return twoDollars;\n    },\n    addAttr: (element, attributes) => {\n        attributes &&\n            Object.keys(attributes).forEach((key) => element.setAttribute(key, attributes[key]));\n        return twoDollars;\n    },\n    ucFirst: (str) => str.charAt(0).toUpperCase() + str.slice(1),\n    merge: (obj1, obj2) => deepmerge_1.default(obj1, obj2),\n    index: ($element) => {\n        const $parent = $element.parentNode;\n        return Array.prototype.indexOf.call($parent.childNodes, $element);\n    },\n    post: (url, data) => {\n        return new Promise((resolve, reject) => {\n            const xhr = new XMLHttpRequest();\n            xhr.open(\"POST\", url, true);\n            xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n            xhr.send(JSON.stringify(data));\n            xhr.onload = () => resolve(xhr.responseText);\n            xhr.onerror = (error) => reject(error);\n        });\n    },\n    preload: (opt) => {\n        const { items, onFileLoaded, onFinish } = opt;\n        const toLoad = items.length;\n        const supported = [\"jpg\", \"png\"];\n        let loaded = 0;\n        items.forEach((item) => {\n            const type = item.split(\".\").pop();\n            if (type && supported.indexOf(type) === -1)\n                return;\n            const img = new Image();\n            img.onload = () => {\n                if (++loaded === toLoad)\n                    onFinish(toLoad);\n                else\n                    onFileLoaded(img.getAttribute(\"src\") || \"\");\n            };\n            img.src = item;\n        });\n    },\n};\nexports.twoDollars = twoDollars;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/twodollars.ts\");\n",""],"names":[],"sourceRoot":""}